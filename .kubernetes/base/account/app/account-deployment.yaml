apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
  namespace: solidvessel
  labels:
    app: account
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account
  template:
    metadata:
      labels:
        app: account
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox
        command: [ 'sh', '-c', "until nslookup account-db.solidvessel.svc.cluster.local; do echo waiting for database; sleep 1; done" ]
      - name: wait-for-keycloak
        image: busybox
        command: [ 'sh', '-c', "until nslookup keycloak.solidvessel.svc.cluster.local; do echo waiting for keycloak; sleep 1; done" ]
      containers:
      - name: account-app
        image: ahmsay/solidvessel-account
        imagePullPolicy: Always
        args:
        - "--spring.profiles.active=test"
        - "--spring.datasource.url=jdbc:postgresql://account-db:5432/account"
        - "--spring.datasource.username=nihilus"
        - "--spring.datasource.password=nihilus"
        - "--spring.data.redis.host=redis-master"
        - "--spring.data.redis.port=6379"
        - "--spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/solidvessel/protocol/openid-connect/certs"
        - "--order.url=http://order:8080/order"
        - "--payment.url=http://payment:8080/payment"
        - "--management.endpoints.web.exposure.include=*"
        - "--keycloak.server-url=http://keycloak:8080"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "aws-secrets"
